<?php
 namespace application\app\controller; class Base { public $modulename; public $uniacid; public function __construct() { goto GgIoQ; GgIoQ: global $_W, $_GPC; goto fo281; iIB89: $this->uniacid = intval($_W["\165\156\151\x61\143\x69\x64"]); goto YAt11; YAt11: C("\x6d\x6f\144\165\154\145\156\x61\155\x65", $this->modulename); goto aO5Pe; fo281: $this->modulename = trim($_GPC["\x6d"]); goto iIB89; aO5Pe: } protected function ajaxReturn($data) { header("\103\157\156\164\145\156\x74\55\x54\171\160\145\72\141\x70\160\154\151\143\141\164\x69\157\x6e\57\152\163\157\x6e\73\40\143\150\x61\x72\163\x65\x74\x3d\x75\164\146\x2d\70"); exit(json_encode($data)); } protected function getPageLimit($page, $size) { goto bBXA0; vmdfy: return $firstRow . "\54" . $listRows; goto TIi1v; sx0B6: $listRows = $size; goto vmdfy; bBXA0: $firstRow = ($page - 1) * $size; goto sx0B6; TIi1v: } protected function setToken($iss = '', $uid = 0) { goto R80CY; R80CY: if (!empty($uid)) { goto KogQT; } goto iyPaG; IBboq: $payload = array("\151\x73\163" => $iss, "\151\141\164" => $_SERVER["\x52\105\x51\x55\x45\x53\124\x5f\x54\111\x4d\105"], "\x65\x78\x70" => $_SERVER["\122\x45\x51\x55\105\123\x54\137\124\111\115\x45"] + 7 * 86400, "\x75\x69\x64" => $uid); goto BKZbI; gbUk6: KogQT: goto IBboq; BKZbI: return self::encode($payload, $this->modulename . "\164\x6f\153\x65\156", "\x53\110\101\62\65\66"); goto o3yW2; iyPaG: return false; goto gbUk6; o3yW2: } protected function checkToken() { goto Fdmrg; WImng: $HTTP_AUTHORIZATION = $result[1][0]; goto XRnfU; ukc9Z: preg_match_all("\57\x28\x3f\72\x5c\173\51\x28\x2e\52\51\50\x3f\72\x5c\175\x29\57\x69", $HTTP_AUTHORIZATION, $result); goto WImng; JJXAq: return false; goto ZgvFp; tnscr: iwQ2l: goto JJXAq; Fdmrg: if (!isset($_SERVER["\110\124\124\x50\x5f\101\125\124\110\x4f\x52\x49\x5a\x41\x54\111\117\x4e"])) { goto iwQ2l; } goto kS_vP; kS_vP: $HTTP_AUTHORIZATION = $_SERVER["\x48\124\124\120\x5f\x41\125\124\110\x4f\x52\x49\x5a\x41\124\x49\117\x4e"]; goto ukc9Z; XRnfU: return self::decode($HTTP_AUTHORIZATION, $this->modulename . "\164\x6f\x6b\x65\x6e"); goto tnscr; ZgvFp: } protected static function encode($payload = array(), $key = '', $alg = "\123\x48\x41\62\x35\66") { goto eOmRj; eOmRj: $key = md5($key); goto LOvU4; wzwtb: return $jwt . "\x2e" . self::signature($jwt, $key, $alg); goto QdMrv; LOvU4: $jwt = self::urlsafeB64Encode(json_encode(["\x74\171\160" => "\112\127\124", "\x61\154\147" => $alg])) . "\x2e" . self::urlsafeB64Encode(json_encode($payload)); goto wzwtb; QdMrv: } protected static function signature($input = '', $key = '', $alg = '') { return hash_hmac($alg, $input, $key); } protected static function decode($jwt = '', $key = '') { goto mwx0E; AAqzR: return false; goto PLNU1; jorVN: $key = md5($key); goto J3hPC; mwx0E: $tokens = explode("\x2e", $jwt); goto jorVN; GHr4e: vqz5t: goto mrGLd; mrGLd: if (!(isset($payload["\145\170\x70"]) && $payload["\x65\x78\160"] < $time)) { goto S61ZL; } goto XFrpX; avmFN: list($header64, $payload64, $sign) = $tokens; goto f75qb; PLNU1: BKGrj: goto mlOLu; ehTuU: if (!empty($header["\x61\154\147"])) { goto Uz00Y; } goto X6o7v; J3hPC: if (!(count($tokens) != 3)) { goto YIfKV; } goto dx6g5; UhM_f: S61ZL: goto Htx6i; posGM: $time = $_SERVER["\x52\x45\x51\125\x45\123\124\x5f\x54\111\x4d\105"]; goto bnGEu; YDt8M: return false; goto GHr4e; XzOiD: Uz00Y: goto NIFfH; NIFfH: if (!(self::signature($header64 . "\x2e" . $payload64, $key, $header["\x61\154\x67"]) !== $sign)) { goto BKGrj; } goto AAqzR; Htx6i: return $payload; goto C27R3; X6o7v: return false; goto XzOiD; XFrpX: return false; goto UhM_f; mlOLu: $payload = json_decode(self::urlsafeB64Decode($payload64), JSON_OBJECT_AS_ARRAY); goto posGM; f75qb: $header = json_decode(self::urlsafeB64Decode($header64), JSON_OBJECT_AS_ARRAY); goto ehTuU; bnGEu: if (!(isset($payload["\151\x61\x74"]) && $payload["\151\141\164"] > $time)) { goto vqz5t; } goto YDt8M; dx6g5: return false; goto X1HtD; X1HtD: YIfKV: goto avmFN; C27R3: } protected static function urlsafeB64Decode($string) { goto dv84w; Y8FuX: if (!$mod4) { goto YWEly; } goto IWzkF; k8D11: $mod4 = strlen($data) % 4; goto Y8FuX; dv84w: $data = str_replace(array("\55", "\137"), array("\x2b", "\57"), $string); goto k8D11; hxZkf: return base64_decode($data); goto p9eWM; IWzkF: $data .= substr("\x3d\75\75\x3d", $mod4); goto p60tE; p60tE: YWEly: goto hxZkf; p9eWM: } protected static function urlsafeB64Encode($string) { goto QLOcc; g_l9H: $data = str_replace(array("\53", "\x2f", "\x3d"), array("\x2d", "\x5f", ''), $data); goto Rc8xA; QLOcc: $data = base64_encode($string); goto g_l9H; Rc8xA: return $data; goto NseP_; NseP_: } protected function autoCharset($fContents, $from = "\147\142\153", $to = "\165\164\x66\x2d\x38") { goto YnF2_; WFR8d: goto aolvV; goto GizA1; QASne: if (!(strtoupper($from) === strtoupper($to) || empty($fContents) || is_scalar($fContents) && !is_string($fContents))) { goto pEMAJ; } goto fDSPr; YnF2_: $from = strtoupper($from) == "\125\124\106\70" ? "\165\164\146\55\70" : $from; goto TrDT5; wex16: return mb_convert_encoding($fContents, $to, $from); goto Vgqhe; u30dw: vZ_Tu: goto OWKIa; GizA1: cblYz: goto wex16; PRlLX: if (function_exists("\x6d\142\137\x63\x6f\156\x76\x65\x72\x74\137\145\x6e\143\x6f\144\151\156\147")) { goto cblYz; } goto u7qZT; fDSPr: return $fContents; goto in9ag; in9ag: pEMAJ: goto PRlLX; e9nSV: aolvV: goto In8uu; OWKIa: return iconv($from, $to, $fContents); goto e9nSV; u7qZT: if (function_exists("\151\143\157\x6e\166")) { goto vZ_Tu; } goto WDcF8; TrDT5: $to = strtoupper($to) == "\125\124\106\70" ? "\x75\164\146\x2d\x38" : $to; goto QASne; Vgqhe: goto aolvV; goto u30dw; WDcF8: return $fContents; goto WFR8d; In8uu: } }